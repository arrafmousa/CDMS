[
  "The molecule is a tetracyclic triterpenoid that is 4,4,8-trimethylandrosta-1,14-diene substituted by an oxo group at position 3, an acetoxy group at position 7 and a furan-3-yl group at position 17. Isolated from Azadirachta indica, it exhibits antiplasmodial and antineoplastic activities. It has a role as an antineoplastic agent, an antiplasmodial drug and a plant metabolite. It is an acetate ester, a cyclic terpene ketone, a member of furans, a limonoid and a tetracyclic triterpenoid.\n\n\n",
  "# Helper function to count rings in a molecule\\ndef count_rings(molecule):\\n    return Chem.rdMolDescriptors.CalcNumRings(molecule)\\n\\n# 1. Check for tetracyclic structure\\ndef is_tetracyclic_triterpenoid(smiles):\\n    molecule = Chem.MolFromSmiles(smiles)\\n    if not molecule:\\n        return \\\"Invalid SMILES string.\\\"\\n    num_rings = count_rings(molecule)\\n    if num_rings != 4:\\n        return f\\\"The molecule has {num_rings} rings; it needs to have exactly 4. Adjust the structure to add or remove rings.\\\"\\n    return None\\n\\n# 2. Check for 4,4,8-trimethylandrosta-1,14-diene structure\\ndef has_trimethyl_and_diene(smiles):\\n    molecule = Chem.MolFromSmiles(smiles)\\n    if not molecule:\\n        return \\\"Invalid SMILES string.\\\"\\n    trimethyl = Chem.MolFromSmarts('C(C)(C)C')\\n    num_trimethyl = len(molecule.GetSubstructMatches(trimethyl))\\n    if num_trimethyl < 3:\\n        return f\\\"The molecule has {num_trimethyl} trimethyl groups; it needs at least 3. Add more trimethyl groups.\\\"\\n    diene = Chem.MolFromSmarts('C=C')\\n    num_diene = len(molecule.GetSubstructMatches(diene))\\n    if num_diene < 2:\\n        return f\\\"The molecule has {num_diene} double bonds; it needs at least 2. Add double bonds at appropriate positions.\\\"\\n    return None\\n\\n# 3. Check for oxo group at position 3\\ndef has_oxo_at_position_3(smiles):\\n    molecule = Chem.MolFromSmiles(smiles)\\n    if not molecule:\\n        return \\\"Invalid SMILES string.\\\"\\n    oxo = Chem.MolFromSmarts('C(=O)')\\n    if not molecule.HasSubstructMatch(oxo):\\n        return \\\"The molecule does not have an oxo group at position 3. Add a carbonyl group (-C=O) at position 3.\\\"\\n    return None\\n\\n# 4. Check for acetoxy group at position 7\\ndef has_acetoxy_at_position_7(smiles):\\n    molecule = Chem.MolFromSmiles(smiles)\\n    if not molecule:\\n        return \\\"Invalid SMILES string.\\\"\\n    acetoxy = Chem.MolFromSmarts('C(=O)O')\\n    if not molecule.HasSubstructMatch(acetoxy):\\n        return \\\"The molecule does not have an acetoxy group at position 7. Add an acetate group (-OCOCH3) at position 7.\\\"\\n    return None\\n\\n# 5. Check for furan-3-yl group at position 17\\ndef has_furan_3_yl_at_position_17(smiles):\\n    molecule = Chem.MolFromSmiles(smiles)\\n    if not molecule:\\n        return \\\"Invalid SMILES string.\\\"\\n    furan_3_yl = Chem.MolFromSmarts('c1ccoc1')\\n    if not molecule.HasSubstructMatch(furan_3_yl):\\n        return \\\"The molecule does not have a furan-3-yl group at position 17. Add a furan ring substituted at position 3 to position 17.\\\"\\n    return None\\n\\n# 6. Check if molecule is an acetate ester\\ndef is_acetate_ester(smiles):\\n    molecule = Chem.MolFromSmiles(smiles)\\n    if not molecule:\\n        return \\\"Invalid SMILES string.\\\"\\n    acetate_ester = Chem.MolFromSmarts('C(=O)O')\\n    if not molecule.HasSubstructMatch(acetate_ester):\\n        return \\\"The molecule is not an acetate ester. Add an acetate group (-OCOCH3).\\\"\\n    return None\\n\\n# 7. Check if molecule is a cyclic terpene ketone\\ndef is_cyclic_terpene_ketone(smiles):\\n    molecule = Chem.MolFromSmiles(smiles)\\n    if not molecule:\\n        return \\\"Invalid SMILES string.\\\"\\n    ketone = Chem.MolFromSmarts('C(=O)')\\n    if not molecule.HasSubstructMatch(ketone):\\n        return \\\"The molecule does not have a ketone group. Add a carbonyl group (-C=O).\\\"\\n    num_rings = count_rings(molecule)\\n    if num_rings == 0:\\n        return \\\"The molecule is not cyclic. Add at least one ring.\\\"\\n    return None\\n\\n# 8. Check if molecule is a member of furans\\ndef is_member_of_furans(smiles):\\n    molecule = Chem.MolFromSmiles(smiles)\\n    if not molecule:\\n        return \\\"Invalid SMILES string.\\\"\\n    furan = Chem.MolFromSmarts('c1ccoc1')\\n    if not molecule.HasSubstructMatch(furan):\\n        return \\\"The molecule is not a member of furans. Add a furan ring.\\\"\\n    return None\\n\\n# Wrapper function to check all constraints and provide feedback\\ndef compile_feedback(smiles):\\n    return [\\n        is_tetracyclic_triterpenoid(smiles),\\n        has_trimethyl_and_diene(smiles),\\n        has_oxo_at_position_3(smiles),\\n        has_acetoxy_at_position_7(smiles),\\n        has_furan_3_yl_at_position_17(smiles),\\n        is_acetate_ester(smiles),\\n        is_cyclic_terpene_ketone(smiles),\\n        is_member_of_furans(smiles),]\\n "
]